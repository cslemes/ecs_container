
name: Terraform Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  TF_VERSION: "1.9.8"
  TF_WORKING_DIR: "./terraform"

  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  PROJECT_NAME: ${{ vars.PROJECT_NAME }}
  BUCKET_NAME: ${{ vars.BUCKET_NAME }}
  CLUSTER_IDENTIFIER: ${{ vars.CLUSTER_IDENTIFIER }}
  DATABRICKS_ACCOUNT_ID: ${{ secrets.DATABRICKS_ACCOUNT_ID }}
  DATABRICKS_CLIENT_ID: ${{ secrets.DATABRICKS_CLIENT_ID }}
  DATABRICKS_CLIENT_SECRET: ${{ secrets.DATABRICKS_CLIENT_SECRET }}
  MASTER_PASSWORD: ${{ secrets.MASTER_PASSWORD }}
  MASTER_USERNAME: ${{ vars.MASTER_USERNAME }}
jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{env.TF_VERSION}}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{vars.AWS_REGION}}

      - name: Initialize Terraform
        working-directory: ${{env.TF_WORKING_DIR}}
        run: terraform init

      - name: Terraform Plan
        working-directory: ${{env.TF_WORKING_DIR}}
        run: terraform plan -out=tfplan

      # - name: Apply Terraform Plan
      #   if: github.event_name == 'push'
      #   working-directory: ${{env.TF_WORKING_DIR}}
      #   run: terraform apply -auto-approve tfplan
